services:
    web:
        build: frontend/

        ports:
            - "3000:3000"
        depends_on:
            - editor_service
            - rethink_db
    editor_service:
        container_name: editor_service
        build: ms_editor/
        depends_on:
            - rethink_db
            - user_db
        ports:
            - "8082:8080"
        environment:
            - RETHINKDB_HOST=${RETHINKDB_HOST}
            - RETHINKDB_PORT=${RETHINKDB_PORT}
            - RETHINKDB_NAME=${RETHINKDB_NAME}
            - DB_HOST=user_db
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_NAME=${DB_NAME}
            - DB_PORT=5432
        volumes:
            - ./ms_editor:/app_backend
        networks:
            - app-network
    logs_service:
        container_name: logs_service
        build: ms_logs/
        depends_on:
            - editor_service
        volumes:
            - ./ms_logs:/app_backend
        networks:
            - app-network

    rethink_db:
        image: rethinkdb:latest
        ports:
            - "28015:28015"
            - "8081:8080"
        volumes:
            - rethinkdb-data:/data
        networks:
            - app-network
    user_db:
        image: postgres:17-alpine
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_NAME}
        networks:
            - app-network
        ports:
            - "5432:5432"
    pgadmin:
        container_name: pgadmin_container
        image: dpage/pgadmin4:9
        environment:
            PGADMIN_DEFAULT_EMAIL: "mentalsmoge@gmail.com"
            PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
            PGADMIN_CONFIG_SERVER_MODE: "False"
        depends_on:
            - user_db
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        ports:
            - "5050:80"
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: "0.5"
                    memory: 1G
        networks:
            - app-network
    zookeeper:
        container_name: zookeeper
        image: zookeeper:latest
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
        ports:
            - "2181:2181"
        networks:
            - app-network

    kafka:
        container_name: kafka
        image: bitnami/kafka:latest
        hostname: kafka
        depends_on:
            - zookeeper
        environment:
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        ports:
            - "9092:9092"
        networks:
            - app-network
    kafka-ui:
        container_name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        depends_on:
            - kafka
        ports:
            - "8080:8080"
        environment:
            KAFKA_CLUSTERS_0_NAME: local
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
            KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
        networks:
            - app-network
    etcd:
        container_name: etcd
        image: bitnami/etcd:latest
        volumes:
            - etcd_data:/bitnami/etcd
        environment:
            ETCD_ENABLE_V2: "true"
            ALLOW_NONE_AUTHENTICATION: "yes"
            ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
            ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
        ports:
            - "2379:2379"
        networks:
            - app-network

    apisix:
        container_name: apisix
        image: apache/apisix:latest
        ports:
            - "9080:9080"
            - "9443:9443"
        restart: always
        volumes:
            - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
        depends_on:
            - etcd
        networks:
            - app-network

    apisix-dashboard:
        container_name: apisix-dashboard
        image: apache/apisix-dashboard:latest
        volumes:
            - ./dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
        ports:
            - "9000:9000"
        environment:
            - APISIX_DASHBOARD_LISTEN=0.0.0.0:9000
            - APISIX_DASHBOARD_ETCD_ENDPOINTS=http://etcd:2379
        depends_on:
            - etcd
            - apisix
        networks:
            - app-network
volumes:
    postgres-data:
    pgadmin-data:
    rethinkdb-data:
    etcd_data:
networks:
    app-network:
        driver: bridge
